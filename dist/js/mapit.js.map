{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/lib/map.ts","src/js/lib/ui.ts","src/js/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","map","ui_1","updateStatus","mapCenter","getCenter","lat","toFixed","lng","document","getElementById","innerHTML","initMap","handleResize","calTopo","L","tileLayer","id","maxZoom","attribution","mapBoxAttrib","mapboxUrl","satellite","openTopo","arcGisTopoAttrib","arcGisTopo","lidarAttrib","baseLayers","CalTopo","Satellite","OpenTopo","ArcGis Topo","U.S. Topo","National Geo","Streets","Lidar","wms","layers","Lidar (MultiDirectional)","center","zoom","control","addTo","scale","style","cursor","on","event","latlng","mapDiv","xhairDiv","mapElement","crossHairElement","x","y","statusHeight","clientHeight","viewportHeight","window","innerHeight","height","offsetLeft","Math","round","offsetWidth","offsetTop","offsetHeight","left","top","onresie","Map","addEventListener","setupMap","removeEventListener","type"],"mappings":"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","file":"mapit.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {handleResize} from './ui';\r\n\r\n// Stores the map instance\r\nvar map;\r\n\r\n\r\n// Initializes the map view\r\nexport function initMap() {\r\n\thandleResize();\t\r\n\r\n\t// Map layers\r\n\tvar calTopoAttrib = 'Map data &copy; <a href=\"http://caltopo.com/\">CalTopo</a> andUSGS';\r\n\tvar calTopoUrl = 'http://s3-us-west-1.amazonaws.com/caltopo/topo/{z}/{x}/{y}.png?v=1';\r\n\tvar calTopo = L.tileLayer(calTopoUrl, {id: 'caltopo', maxZoom: 16, attribution: calTopoAttrib});\r\n\tvar mapBoxAttrib = 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n\t\t\t'<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n\t\t\t'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>';\r\n\tvar mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoic2VyaWFscGhvdG9nIiwiYSI6ImNqOW9sZDB4NzFmd20zM250cWl6cW9ldjkifQ.myAhLDT054QvyET45sIS4Q';\r\n\tvar satellite = L.tileLayer(mapboxUrl, {id: 'mapbox.satellite', attribution: mapBoxAttrib});\r\n\tvar openTopoAttrib = 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, ' + \r\n\t\t'<a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; ' + \r\n\t\t'<a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)';\r\n\tvar openTopoUrl = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';\r\n\tvar openTopo = L.tileLayer(openTopoUrl, {maxZoom: 17, attribution: openTopoAttrib});\r\n\tvar arcGisTopoAttrib = '&copy; arcGIS <a href=\"http://links.esri.com/e800-summary\" target=\"_blank\"><b>(Topo Maps Terms of Use)</b></a>';\r\n\tvar arcGisTopoUrl = 'http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}';\r\n\tvar arcGisTopo = L.tileLayer(arcGisTopoUrl, {maxZoom: 19, attribution: arcGisTopoAttrib});\r\n\tvar usTopoUrl = 'http://services.arcgisonline.com/ArcGIS/rest/services/USA_Topo_Maps/MapServer/tile/{z}/{y}/{x}';\r\n\tvar usTopo = L.tileLayer(usTopoUrl, {maxZoom: 15, attribution: arcGisTopoAttrib});\r\n\tvar natGeoUrl = 'http://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}';\r\n\tvar natGeo = L.tileLayer(natGeoUrl, {maxZoom: 16, attribution: arcGisTopoAttrib});\r\n\tvar streets = L.tileLayer(mapboxUrl, {id: 'mapbox.streets', maxZoom: 19, attribution: mapBoxAttrib});\r\n\tvar lidarAttrib = 'Kentucky Division of Geographic Information (DGI)';\r\n\tvar lidar = L.tileLayer.wms('https://kyraster.ky.gov/arcgis/services/ElevationServices/Ky_DEM_KYAPED_5FT_ShadedRelief_WGS84WM/ImageServer/WMSServer', {\r\n\t\tlayers: '0',\r\n\t\tattribution: lidarAttrib\r\n\t});\r\n\tvar lidarMulti = L.tileLayer.wms('https://kyraster.ky.gov/arcgis/services/ElevationServices/Ky_DEM_KYAPED_5FT_MultiDirectionalHillshade/ImageServer/WMSServer', {\r\n\t\tlayers: '0',\r\n\t\tattribution: lidarAttrib\r\n\t});\r\n\r\n\tvar baseLayers = {\r\n\t\t\"CalTopo\": calTopo,\r\n\t\t\"Satellite\": satellite,\r\n\t\t\"OpenTopo\": openTopo,\r\n\t\t\"ArcGis Topo\": arcGisTopo,\r\n\t\t\"U.S. Topo\": usTopo,\r\n\t\t\"National Geo\": natGeo,\r\n\t\t\"Streets\": streets,\r\n\t\t\"Lidar\": lidar,\r\n\t\t\"Lidar (MultiDirectional)\": lidarMulti\r\n\t};\r\n\r\n\t// Build the map\r\n\tmap = L.map('map-view', {\r\n\t\tcenter: [37.37, -84.22],\r\n\t\tzoom: 10,\r\n\t\tlayers: [arcGisTopo]\r\n\t});\r\n\tvar layersControl = L.control.layers(baseLayers).addTo(map);\r\n\tL.control.scale().addTo(map);\r\n\tdocument.getElementById('map-view').style.cursor = 'crosshair';\r\n\r\n\t// Map Actions\r\n\tmap.on(\"moveend\", updateStatus);\r\n\tmap.on(\"mousemove\", (e) => { handleMouseMove(e); });\r\n\r\n\t// Initialize the map status\r\n\tupdateStatus();\r\n}\r\n\r\n// Updates the map center status\r\nfunction updateStatus() {\r\n\tvar mapCenter = map.getCenter();\r\n\tvar lat = mapCenter.lat.toFixed(6);\r\n\tvar lng = mapCenter.lng.toFixed(6);\r\n\tdocument.getElementById(\"center-lat\").innerHTML = lat;\r\n\tdocument.getElementById(\"center-lon\").innerHTML = lng;\r\n}\r\n\r\n// Handles the mouse move event\r\nfunction handleMouseMove(event) {\r\n\tdocument.getElementById(\"cursor-lat\").innerHTML = event.latlng.lat.toFixed(6);\r\n\tdocument.getElementById(\"cursor-lon\").innerHTML = event.latlng.lng.toFixed(6);\r\n}","window.onresie = handleResize;\r\n\r\n// Sets the map crosshair \r\nfunction setCrossHair(mapDiv : string, xhairDiv: string) {\r\n\tvar mapElement = document.getElementById(mapDiv);\r\n\tvar crossHairElement = document.getElementById(xhairDiv);\r\n\tvar x = mapElement.offsetLeft + Math.round(mapElement.offsetWidth / 2) - 8;\r\n\tvar y = mapElement.offsetTop + Math.round(mapElement.offsetHeight / 2) - 8;\r\n\tcrossHairElement.style.left = x + \"px\";\r\n\tcrossHairElement.style.top = y + \"px\";\r\n}\r\n\r\n// Handles the resize of the UI\r\nexport function handleResize() {\r\n\tvar statusHeight = document.getElementById('map-status').clientHeight;\r\n\tvar viewportHeight = window.innerHeight;\r\n\tdocument.getElementById('map-view').style.height = viewportHeight - statusHeight + \"px\";\r\n\r\n\t// Set the cross hair position\r\n\tsetCrossHair(\"map-view\", \"crosshair\");\r\n}","const Map = require('./lib/map');\r\n\r\nwindow.addEventListener(\"load\", function setupMap(event) {\r\n\t// Only run this listener once\r\n\twindow.removeEventListener(event.type, setupMap, false);\r\n\r\n\tMap.initMap();\r\n}, false);"]}